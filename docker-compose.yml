version: "3.8"

services:
  authserver:
    build:
      context: ./authServer/
      dockerfile: Dockerfile
    container_name: authserver
    restart: unless-stopped
    depends_on:
      - mongodb
    environment:
      PORT: 8090
      MONGODB_URI: mongodb://root:example@mongodb
    ports:
      - 8090:8090

  tenantmgt:
    build:
      context: ./tenantmgt/
      dockerfile: Dockerfile
    container_name: tenantmgt
    restart: unless-stopped
    depends_on:
      - mongodb
    environment:
      PORT: 8091
      MONGODB_URI: mongodb://root:example@mongodb
    ports:
      - 8091:8091

  usermgt:
    build:
      context: ./usermgt/
      dockerfile: Dockerfile
    container_name: usermgt2
    restart: on-failure
    depends_on:
      - mongodb
    environment:
      PORT: 8092
      MONGODB_URI: mongodb://root:example@mongodb
    ports:
      - 8092:8092

  mongodb:
    build:
      context: ./mdb/
      dockerfile: Dockerfile
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_DATABASE: admin
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - ./data/mongodb:/data/db:rw

  mongo-express:
    image: mongo-express
    container_name: mexpress
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=example
      - ME_CONFIG_MONGODB_URL=mongodb://root:example@mongodb:27017/?authSource=admin

  # cache:
  #   image: redis:latest
  #   restart: always
  #   ports:
  #     - "6379:6379"
  #   command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
  #   volumes:
  #     - ./data/cache:/data/cache
volumes:
  mongodb:
    driver: local
# cache:
#   driver: local